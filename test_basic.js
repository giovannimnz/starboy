/**
 * Teste b√°sico para verificar se o projeto est√° funcionando
 */

const path = require('path');
const fs = require('fs');

console.log('üß™ === TESTE B√ÅSICO DO PROJETO STARBOY ===');
console.log(`üìÅ Diret√≥rio atual: ${process.cwd()}`);
console.log(`üìÖ Data: ${new Date().toISOString()}`);

// Verificar se arquivos principais existem
const files = [
  'backend/core/database/conexao.js',
  'backend/exchanges/binance/api/rest.js',
  'backend/exchanges/binance/monitoring/orchMonitor.js',
  'backend/exchanges/binance/processes/setup_basic_data.js',
  'package.json',
  'jest.config.js'
];

console.log('\nüìÅ Verificando arquivos principais...');
files.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// Testar importa√ß√µes b√°sicas
console.log('\nüì¶ Testando importa√ß√µes b√°sicas...');

try {
  const conexao = require('./backend/core/database/conexao');
  console.log('‚úÖ conexao.js importado com sucesso');
} catch (error) {
  console.error('‚ùå Erro ao importar conexao.js:', error.message);
}

try {
  const rest = require('./backend/exchanges/binance/api/rest');
  console.log('‚úÖ rest.js importado com sucesso');
} catch (error) {
  console.error('‚ùå Erro ao importar rest.js:', error.message);
}

try {
  const setupData = require('./backend/exchanges/binance/processes/setup_basic_data');
  console.log('‚úÖ setup_basic_data.js importado com sucesso');
} catch (error) {
  console.error('‚ùå Erro ao importar setup_basic_data.js:', error.message);
}

// Testar conex√£o com banco
async function testDatabase() {
  try {
    console.log('\nüóÉÔ∏è Testando conex√£o com banco...');
    
    const { getDatabaseInstance } = require('./backend/core/database/conexao');
    const db = await getDatabaseInstance();
    
    if (db) {
      console.log('‚úÖ Conex√£o com banco estabelecida');
      
      // Testar uma query simples
      const result = await db.query('SELECT 1 as test');
      const rows = result.rows;
      
      if (rows && rows.length > 0 && rows[0].test === 1) {
        console.log('‚úÖ Query de teste executada com sucesso');
      } else {
        console.log('‚ö†Ô∏è Query de teste retornou resultado inesperado');
      }
      
    } else {
      console.log('‚ùå N√£o foi poss√≠vel estabelecer conex√£o com banco');
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar banco:', error.message);
  }
}

// Testar dados b√°sicos
async function testBasicData() {
  try {
    console.log('\nüè¶ Testando dados b√°sicos...');
    
    const { checkAndCreateBasicData } = require('./backend/exchanges/binance/processes/setup_basic_data');
    await checkAndCreateBasicData();
    
    console.log('‚úÖ Dados b√°sicos verificados/criados com sucesso');
    
  } catch (error) {
    console.error('‚ùå Erro ao testar dados b√°sicos:', error.message);
  }
}

// Executar testes
async function runTests() {
  try {
    await testDatabase();
    await testBasicData();
    
    console.log('\nüéâ === TESTE B√ÅSICO CONCLU√çDO ===');
    console.log('‚úÖ O projeto parece estar funcionando corretamente');
    
  } catch (error) {
    console.error('‚ùå Erro geral nos testes:', error.message);
    process.exit(1);
  }
}

runTests();
