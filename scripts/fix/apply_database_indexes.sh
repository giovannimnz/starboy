#!/bin/bash

# =========================================================================
# SCRIPT DE APLICA√á√ÉO DE √çNDICES DE BANCO DE DADOS
# =========================================================================
# Aplica os √≠ndices de otimiza√ß√£o na base de dados do Starboy Trading System
# Baseado na an√°lise completa das consultas mais cr√≠ticas do sistema
# =========================================================================

set -e  # Para em caso de erro

echo "========================================================================="
echo "üöÄ APLICA√á√ÉO DE √çNDICES DE OTIMIZA√á√ÉO - STARBOY TRADING SYSTEM"
echo "========================================================================="
echo "‚è∞ Iniciado em: $(date)"
echo ""

# Verificar se o arquivo .env existe
if [[ ! -f "config/.env" ]]; then
    echo "‚ùå ERRO: Arquivo config/.env n√£o encontrado!"
    echo "   Certifique-se de estar no diret√≥rio raiz do projeto."
    exit 1
fi

# Verificar se o arquivo SQL existe
if [[ ! -f "backend/core/database/migrations/database_indexes_optimization.sql" ]]; then
    echo "‚ùå ERRO: Arquivo de √≠ndices n√£o encontrado!"
    echo "   Esperado: backend/core/database/migrations/database_indexes_optimization.sql"
    exit 1
fi

echo "‚úÖ Verifica√ß√µes iniciais conclu√≠das"
echo ""

# Carregar vari√°veis do .env
echo "üìã Carregando configura√ß√µes da base de dados..."
source config/.env

# Verificar se as vari√°veis necess√°rias est√£o definidas
if [[ -z "$DB_HOST" || -z "$DB_USER" || -z "$DB_PASSWORD" || -z "$DB_NAME" ]]; then
    echo "‚ùå ERRO: Vari√°veis de base de dados n√£o definidas no .env"
    echo "   Necess√°rias: DB_HOST, DB_USER, DB_PASSWORD, DB_NAME"
    exit 1
fi

echo "   Host: $DB_HOST"
echo "   Porta: ${DB_PORT:-3306}"
echo "   Usu√°rio: $DB_USER"
echo "   Base de dados: $DB_NAME"
echo ""

# Verificar se mysql est√° dispon√≠vel
if ! command -v mysql &> /dev/null; then
    echo "‚ùå ERRO: Cliente MySQL n√£o encontrado!"
    echo "   Instale o cliente MySQL para continuar."
    exit 1
fi

# Verificar conectividade com a base de dados
echo "üîç Testando conectividade com a base de dados..."
if ! mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" -e "SELECT 1;" > /dev/null 2>&1; then
    echo "‚ùå ERRO: N√£o foi poss√≠vel conectar √† base de dados!"
    echo "   Verifique as credenciais e se o servidor MySQL est√° rodando."
    exit 1
fi
echo "‚úÖ Conectividade confirmada"
echo ""

# Fazer backup da estrutura da base de dados (apenas estrutura, sem dados)
echo "üíæ Criando backup da estrutura da base de dados..."
BACKUP_FILE="backend/core/backups/indexes_backup_$(date +%Y%m%d_%H%M%S).sql"
mkdir -p backend/core/backups

mysqldump -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" \
    --no-data --routines --triggers "$DB_NAME" > "$BACKUP_FILE"

if [[ $? -eq 0 ]]; then
    echo "‚úÖ Backup criado: $BACKUP_FILE"
else
    echo "‚ùå ERRO: Falha ao criar backup!"
    exit 1
fi
echo ""

# Confirmar aplica√ß√£o
echo "‚ö†Ô∏è  ATEN√á√ÉO: Este script aplicar√° √≠ndices de otimiza√ß√£o na base de dados."
echo ""
echo "üìä √çNDICES QUE SER√ÉO APLICADOS:"
echo "   ‚Ä¢ posicoes: 8 novos √≠ndices (consultas cr√≠ticas de reverse.js)"
echo "   ‚Ä¢ ordens: 10 novos √≠ndices (consultas cr√≠ticas de positionSync.js)"
echo "   ‚Ä¢ webhook_signals: 9 novos √≠ndices (linking e timeout management)"
echo "   ‚Ä¢ contas: 4 novos √≠ndices (valida√ß√£o de contas ativas)"
echo "   ‚Ä¢ Tabelas auxiliares: 15+ √≠ndices adicionais"
echo ""
echo "üíæ IMPACTO ESPERADO:"
echo "   ‚Ä¢ Aumento no uso de espa√ßo em disco: 15-30%"
echo "   ‚Ä¢ Melhoria na performance de consultas: 70-90%"
echo "   ‚Ä¢ Pequeno impacto em inser√ß√µes: 5-10% mais lentas"
echo ""
echo "üîÑ Um backup da estrutura foi criado em: $BACKUP_FILE"
echo ""
read -p "ü§î Deseja continuar com a aplica√ß√£o dos √≠ndices? (s/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Ss]$ ]]; then
    echo "‚ùå Opera√ß√£o cancelada pelo usu√°rio."
fi

echo ""
echo "üîß Aplicando √≠ndices de otimiza√ß√£o..."
echo "   Arquivo: backend/core/database/migrations/database_indexes_optimization.sql"
echo ""

# Aplicar os √≠ndices
mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" \
    < backend/core/database/migrations/database_indexes_optimization.sql

if [[ $? -eq 0 ]]; then
    echo "‚úÖ √çndices aplicados com sucesso!"
else
    echo "‚ùå ERRO: Falha ao aplicar √≠ndices!"
    echo "   Verifique os logs de erro do MySQL."
    exit 1
fi

echo ""
echo "üìä Verificando √≠ndices aplicados..."

# Verificar os √≠ndices criados nas tabelas principais
mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "
SELECT 
    TABLE_NAME as Tabela,
    COUNT(*) as Total_Indices
FROM information_schema.STATISTICS 
WHERE TABLE_SCHEMA = '$DB_NAME' 
    AND TABLE_NAME IN ('posicoes', 'ordens', 'webhook_signals', 'contas')
    AND INDEX_NAME LIKE 'idx_%'
GROUP BY TABLE_NAME
ORDER BY TABLE_NAME;
"

echo ""
echo "üìà Estat√≠sticas das tabelas principais:"
mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "
SELECT 
    TABLE_NAME as Tabela,
    TABLE_ROWS as Linhas,
    ROUND(((DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024), 2) AS 'Tamanho_Total_MB',
    ROUND((INDEX_LENGTH / 1024 / 1024), 2) AS 'Tamanho_Indices_MB',
    ROUND((INDEX_LENGTH / (DATA_LENGTH + INDEX_LENGTH)) * 100, 1) AS 'Percentual_Indices'
FROM information_schema.TABLES 
WHERE TABLE_SCHEMA = '$DB_NAME' 
    AND TABLE_NAME IN ('posicoes', 'ordens', 'webhook_signals', 'contas')
ORDER BY (DATA_LENGTH + INDEX_LENGTH) DESC;
"

echo ""
echo "üîç Verificando queries cr√≠ticas otimizadas..."

# Teste da query mais cr√≠tica do reverse.js
echo "   ‚Ä¢ Testando query cr√≠tica: posi√ß√µes por s√≠mbolo + status + conta..."
mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "
EXPLAIN SELECT id FROM posicoes WHERE simbolo = 'BTCUSDT' AND status = 'OPEN' AND conta_id = 1 ORDER BY id DESC LIMIT 1;
" | grep -q "Using index" && echo "     ‚úÖ Index sendo utilizado" || echo "     ‚ö†Ô∏è  Index pode n√£o estar sendo utilizado"

# Teste da query cr√≠tica do positionSync.js
echo "   ‚Ä¢ Testando query cr√≠tica: LEFT JOIN posi√ß√µes sem sinais..."
mysql -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "
EXPLAIN SELECT p.id FROM posicoes p LEFT JOIN webhook_signals ws ON ws.position_id = p.id WHERE p.status = 'OPEN' AND p.conta_id = 1 AND ws.position_id IS NULL LIMIT 1;
" | grep -q "Using index" && echo "     ‚úÖ Index sendo utilizado" || echo "     ‚ö†Ô∏è  Index pode n√£o estar sendo utilizado"

echo ""
echo "========================================================================="
echo "‚úÖ APLICA√á√ÉO DE √çNDICES CONCLU√çDA COM SUCESSO!"
echo "========================================================================="
echo "‚è∞ Finalizado em: $(date)"
echo ""
echo "ÔøΩ √çNDICES APLICADOS:"
echo "   ‚Ä¢ 40+ novos √≠ndices foram criados"
echo "   ‚Ä¢ Foco nas consultas mais cr√≠ticas do sistema"
echo "   ‚Ä¢ Otimiza√ß√£o especial para reverse.js e positionSync.js"
echo ""
echo "üìà MELHORIAS ESPERADAS:"
echo "   ‚Ä¢ Query cr√≠tica reverse.js (linha 983): 80-90% mais r√°pida"
echo "   ‚Ä¢ Query cr√≠tica positionSync.js (linha 1149): 70-85% mais r√°pida"
echo "   ‚Ä¢ Consultas de sinais ativos: 60-80% mais r√°pidas"
echo "   ‚Ä¢ LEFT JOINs entre tabelas: 50-70% mais r√°pidos"
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "   1. üîÑ Reinicie o sistema para garantir que use os novos √≠ndices"
echo "   2. üìä Monitore a performance das consultas do sistema"
echo "   3. üß™ Execute testes das funcionalidades principais (reverse.js)"
echo "   4. üíæ Verifique o uso de espa√ßo em disco regularmente"
echo "   5. ÔøΩ Configure monitoramento de performance se necess√°rio"
echo ""
echo "üìÑ RELAT√ìRIOS E AN√ÅLISES:"
echo "   - Backup da estrutura: $BACKUP_FILE"
echo "   - Para an√°lise detalhada: node apply_indexes.js --analyze"
echo "   - Para monitoramento: node apply_indexes.js --monitor"
echo ""
echo "‚ö†Ô∏è  LEMBRETES IMPORTANTES:"
echo "   ‚Ä¢ Execute 'ANALYZE TABLE posicoes, ordens, webhook_signals;' semanalmente"
echo "   ‚Ä¢ Monitore queries lentas com 'SHOW PROCESSLIST'"
echo "   ‚Ä¢ Configure rota√ß√£o de logs se o espa√ßo for um problema"
echo "   ‚Ä¢ Os √≠ndices cr√≠ticos t√™m foco nas queries analisadas do c√≥digo"
echo ""
echo "üéâ SISTEMA PRONTO PARA OPERA√á√ÉO OTIMIZADA!"
echo "   As consultas mais cr√≠ticas do reverse.js e positionSync.js"
echo "   agora devem executar significativamente mais r√°pido."
echo "========================================================================="
